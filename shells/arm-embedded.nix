{ pkgs, ... }:

pkgs.mkShell {
  name = "arm-embedded-dev-shell";

  nativeBuildInputs = [
    pkgs.gcc-arm-embedded
    pkgs.cmake
    pkgs.ninja
    pkgs.clang-tools
  ];

  shellHook = ''
    echo "Entering embedded environment..."
    
    # 定义一个函数来生成 .clangd 配置
    generate_clangd() {
      # 只有在 .clangd 文件不存在或需要更新时才重新生成
      if ! [ -f .clangd ] || ! grep -q "Generated by my-flakes" .clangd; then
        echo "Generating .clangd configuration..."
        local compiler_path=$(which arm-none-eabi-gcc)
        if [ -z "$compiler_path" ]; then
          echo "Error: arm-none-eabi-gcc not found in PATH."
          echo "Available compilers:"
          ls ${pkgs.gcc-arm-embedded}/bin/ | grep gcc || echo "No gcc found in package"
          return 1
        fi
        local include_flags=$( ''${compiler_path} -E -Wp,-v -xc /dev/null 2>&1 \
          | grep '^[[:space:]]*/nix/store' \
          | sed 's/^ */    - "-I/; s/$/"/' )
        cat > .clangd <<EOF
# This file is auto-generated by my-flakes. Do not edit.
CompileFlags:
  Add:
$include_flags
EOF
        echo "Successfully generated .clangd"
      fi
    }
    
    generate_clangd
  '';
}
